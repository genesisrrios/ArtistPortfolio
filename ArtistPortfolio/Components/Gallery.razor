@using Microsoft.Extensions.FileProviders
@using Microsoft.AspNetCore.Mvc
@using ViewModel
@using System.IO
@inject IWebHostEnvironment _webHostEnvironment
@inject ArtistService _service
<h3>Gallery</h3>
<div class="row">
    @foreach(var picture in Pictures)
    {
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
            <div class="hovereffect">
                <img class="img-responsive" loading=lazy src="/images/gallery/@picture.Name"  alt="@picture.Description" style="max-height:300px">
                <div class="overlay">
				    <p>
					    <a>@picture.Description</a>
				    </p>
                </div>
            </div>
        </div>
    }
</div>

<component type="typeof(Pager)" render-mode="ServerPrerendered"
        param-pageNumber="@Page"
        param-totalRecords="@TotalRecords"
        param-pageSize="15"
        param-linkUrl="/Index" />

@code {
    private List<PictureViewModel> Pictures { get; set; } = new List<PictureViewModel>();
    private int Page { get; set; } = 1;
    private int TotalPages { get; set; } = 1;
    private int TotalRecords { get; set; } = 1;
    protected override async Task OnInitializedAsync()
    {
        var (totalPages,totalRecords, gallery) = await _service.GetPagedGallery(Page, 15);
        var provider = new PhysicalFileProvider(_webHostEnvironment.WebRootPath);
        var contents = provider.GetDirectoryContents(Path.Combine("images", "gallery"));
        foreach (var image in gallery)
        {
            Pictures.Add(new PictureViewModel
            {
                Description = image.Description,
                Name = contents.Where(c => c.Name.Contains(image.Name)).First().Name
            });
        }
    }
}
